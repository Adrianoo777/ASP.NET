// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicShop.Models;

namespace MusicShop.Migrations
{
    [DbContext(typeof(MusicShopContext))]
    [Migration("20210104220910_migration2")]
    partial class migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicShop.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("MusicShop.Models.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nchar(64)")
                        .IsFixedLength(true)
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("MusicShop.Models.Instrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nchar(128)")
                        .IsFixedLength(true)
                        .HasMaxLength(128);

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("TypeId");

                    b.ToTable("Instrument");
                });

            modelBuilder.Entity("MusicShop.Models.InstrumentRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstrumentId");

                    b.ToTable("InstrumentRating");
                });

            modelBuilder.Entity("MusicShop.Models.InstrumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nchar(128)")
                        .IsFixedLength(true)
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("InstrumentType");
                });

            modelBuilder.Entity("MusicShop.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nchar(256)")
                        .IsFixedLength(true)
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nchar(128)")
                        .IsFixedLength(true)
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("MusicShop.Models.Cart", b =>
                {
                    b.HasOne("MusicShop.Models.Instrument", "Instrument")
                        .WithMany()
                        .HasForeignKey("InstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicShop.Models.Instrument", b =>
                {
                    b.HasOne("MusicShop.Models.Colors", "Color")
                        .WithMany("Instrument")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("FK_Instrument_Colors")
                        .IsRequired();

                    b.HasOne("MusicShop.Models.Manufacturer", "Manufacturer")
                        .WithMany("Instrument")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK_Instrument_Manufacturer")
                        .IsRequired();

                    b.HasOne("MusicShop.Models.InstrumentType", "Type")
                        .WithMany("Instrument")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Instrument_InstrumentType")
                        .IsRequired();
                });

            modelBuilder.Entity("MusicShop.Models.InstrumentRating", b =>
                {
                    b.HasOne("MusicShop.Models.Instrument", "Instrument")
                        .WithMany("InstrumentRating")
                        .HasForeignKey("InstrumentId")
                        .HasConstraintName("FK_InstrumentRating_Instrument")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
